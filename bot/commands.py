from aiogram import F, Router, md
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message

from .config import config
from xls_parser import XlsParser

router = Router()


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await message.answer((
        f"–ü—Ä–∏–≤–µ—Ç, {md.bold(message.from_user.full_name)}\!\n"
        "–ó–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª excel –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–ª—è–º–∏:\n"
        "`title` \- –Ω–∞–∑–≤–∞–Ω–∏–µ\n"
        "`url` \- —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –∏—Å—Ç–æ—á–Ω–∏–∫\n"
        "`xpath` \- –ø—É—Ç—å –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å —Ü–µ–Ω–æ–π"),
        parse_mode=ParseMode.MARKDOWN_V2
    )


@router.message(F.text)
async def text_handler(message: Message) -> None:
    await message.answer((
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É üìé —Å–ª–µ–≤–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞\.\n"
        "–ó–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª excel –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–ª—è–º–∏:\n"
        "`title` \- –Ω–∞–∑–≤–∞–Ω–∏–µ\n"
        "`url` \- —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –∏—Å—Ç–æ—á–Ω–∏–∫\n"
        "`xpath` \- –ø—É—Ç—å –∫ —ç–ª–µ–º–µ–Ω—Ç—É —Å —Ü–µ–Ω–æ–π"),
        parse_mode=ParseMode.MARKDOWN_V2
    )


@router.message(F.document)
async def file_handler(message: Message) -> None:
    allowed_extensions = {".xls", ".xlsx"}
    file_name = message.document.file_name
    file_path = f"{config.media_path}/{file_name}"

    if not any(file_name.endswith(ext) for ext in allowed_extensions):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (.xls –∏–ª–∏ .xlsx).")
        return

    await message.bot.download(message.document, file_path)

    print(XlsParser.parse_file(file_path))
